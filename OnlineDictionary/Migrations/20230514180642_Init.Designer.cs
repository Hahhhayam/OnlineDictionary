// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineDictionary.API.Models;

#nullable disable

namespace OnlineDictionary.Migrations
{
    [DbContext(typeof(OnlineDictionaryContext))]
    [Migration("20230514180642_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineDictionary.API.Models.Dict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("info");

                    b.Property<int>("Language1Id")
                        .HasColumnType("integer")
                        .HasColumnName("language1_id");

                    b.Property<int>("Language2Id")
                        .HasColumnType("integer")
                        .HasColumnName("language2_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_dicts");

                    b.HasIndex("Language1Id");

                    b.HasIndex("Language2Id");

                    b.ToTable("dicts", (string)null);
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.DictsTranslate", b =>
                {
                    b.Property<int>("DictId")
                        .HasColumnType("integer")
                        .HasColumnName("dict_id");

                    b.Property<int>("TranslateId")
                        .HasColumnType("integer")
                        .HasColumnName("translate_id");

                    b.HasKey("DictId", "TranslateId")
                        .HasName("pk_dicts_translates");

                    b.ToTable("dicts_translates", (string)null);
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("info");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .HasColumnName("name")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("pk_languages");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Translate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Example")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("example");

                    b.Property<int>("Word1Id")
                        .HasColumnType("integer")
                        .HasColumnName("word1_id");

                    b.Property<int>("Word2Id")
                        .HasColumnType("integer")
                        .HasColumnName("word2_id");

                    b.HasKey("Id")
                        .HasName("pk_translates");

                    b.HasIndex("Word1Id");

                    b.HasIndex("Word2Id");

                    b.ToTable("translates", (string)null);
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("info");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("language_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_words");

                    b.HasIndex("LanguageId");

                    b.ToTable("words", (string)null);
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Dict", b =>
                {
                    b.HasOne("OnlineDictionary.API.Models.Language", "Language1")
                        .WithMany("DictLanguage1s")
                        .HasForeignKey("Language1Id")
                        .IsRequired()
                        .HasConstraintName("fk_dicts_languages1");

                    b.HasOne("OnlineDictionary.API.Models.Language", "Language2")
                        .WithMany("DictLanguage2s")
                        .HasForeignKey("Language2Id")
                        .IsRequired()
                        .HasConstraintName("fk_dicts_languages2");

                    b.Navigation("Language1");

                    b.Navigation("Language2");
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.DictsTranslate", b =>
                {
                    b.HasOne("OnlineDictionary.API.Models.Dict", "Dict")
                        .WithMany("DictsTranslates")
                        .HasForeignKey("DictId")
                        .IsRequired()
                        .HasConstraintName("fk_dicts_translates_dicts");

                    b.Navigation("Dict");
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Translate", b =>
                {
                    b.HasOne("OnlineDictionary.API.Models.Word", "Word1")
                        .WithMany("TranslateWord1s")
                        .HasForeignKey("Word1Id")
                        .IsRequired()
                        .HasConstraintName("fk_translates_words1");

                    b.HasOne("OnlineDictionary.API.Models.Word", "Word2")
                        .WithMany("TranslateWord2s")
                        .HasForeignKey("Word2Id")
                        .IsRequired()
                        .HasConstraintName("fk_translates_words2");

                    b.Navigation("Word1");

                    b.Navigation("Word2");
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Word", b =>
                {
                    b.HasOne("OnlineDictionary.API.Models.Language", "Language")
                        .WithMany("Words")
                        .HasForeignKey("LanguageId")
                        .IsRequired()
                        .HasConstraintName("fk_words_languages");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Dict", b =>
                {
                    b.Navigation("DictsTranslates");
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Language", b =>
                {
                    b.Navigation("DictLanguage1s");

                    b.Navigation("DictLanguage2s");

                    b.Navigation("Words");
                });

            modelBuilder.Entity("OnlineDictionary.API.Models.Word", b =>
                {
                    b.Navigation("TranslateWord1s");

                    b.Navigation("TranslateWord2s");
                });
#pragma warning restore 612, 618
        }
    }
}
